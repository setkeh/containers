name: Build Docker Hub Containers 
on: [push]
jobs:
  build-ecr-container:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build the Docker image
      run: docker build aws-ecr-proxy/ -t setkeh/aws-ecr-proxy:latest
    - uses: anchore/scan-action@master
      with:
        image-reference: "setkeh/aws-ecr-proxy:latest"
        dockerfile-path: "aws-ecr-proxy/Dockerfile"
        include-app-packages: true
        fail-build: true
    - name: anchore inline scan JSON results
      run: for j in `ls ./anchore-reports/*.json`; do echo "---- ${j} ----"; cat ${j}; echo; done
    - name: Docker Login
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Publish Docker Image
      run: docker push setkeh/aws-ecr-proxy:latest
  build-prometheus-alpine:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build the Docker image
      run: docker build prometheus-alpine/ -t setkeh/prometheus-alpine:latest
    - uses: anchore/scan-action@master
      with:
        image-reference: "setkeh/prometheus-alpine:latest"
        dockerfile-path: "prometheus-alpine/Dockerfile"
        include-app-packages: true
        fail-build: true
    - name: anchore inline scan JSON results
      run: for j in `ls ./anchore-reports/*.json`; do echo "---- ${j} ----"; cat ${j}; echo; done
    - name: Docker Login
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Publish Docker Image
      run: docker push setkeh/prometheus-alpine:latest
    - name: see what stuff is in reports
      run: ls ./anchore-reports
  build-alpine-glibc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build the Docker image
      run: docker build alpine-glibc/ -t setkeh/alpine-glibc:latest
    - uses: anchore/scan-action@master
      with:
        image-reference: "setkeh/alpine-glibc:latest"
        dockerfile-path: "alpine-glibc/Dockerfile"
        include-app-packages: true
        fail-build: true
    - name: anchore inline scan JSON results
      run: for j in `ls ./anchore-reports/*.json`; do echo "---- ${j} ----"; cat ${j}; echo; done
    - name: Docker Login
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Publish Docker Image
      run: docker push setkeh/alpine-glibc:latest
  build-archlinux-abs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build the Docker image
      run: docker build archlinux-abs/ -t setkeh/archlinux-abs:latest
    - uses: anchore/scan-action@master
      with:
        image-reference: "setkeh/archlinux-abs:latest"
        dockerfile-path: "archlinux-abs/Dockerfile"
        include-app-packages: true
        fail-build: true
    - name: anchore inline scan JSON results
      run: for j in `ls ./anchore-reports/*.json`; do echo "---- ${j} ----"; cat ${j}; echo; done
    - name: Docker Login
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Publish Docker Image
      run: docker push setkeh/archlinux-abs:latest
  build-grafana-alpine:
    runs-on: ubuntu-latest
    needs: build-alpine-glibc
    steps:
    - uses: actions/checkout@v1
    - name: Build the Docker image
      run: docker build grafana-alpine/ -t setkeh/grafana-alpine:latest
    - uses: anchore/scan-action@master
      with:
        image-reference: "setkeh/grafana-alpine:latest"
        dockerfile-path: "grafana-alpine/Dockerfile"
        include-app-packages: true
        fail-build: true
    - name: anchore inline scan JSON results
      run: for j in `ls ./anchore-reports/*.json`; do echo "---- ${j} ----"; cat ${j}; echo; done
    - name: Docker Login
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Publish Docker Image
      run: docker push setkeh/grafana-alpine:latest
  build-haproxy-alpine:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build the Docker image
      run: docker build haproxy-alpine/ -t setkeh/haproxy-alpine:latest
    - uses: anchore/scan-action@master
      with:
        image-reference: "setkeh/haproxy-alpine:latest"
        dockerfile-path: "haproxy-alpine/Dockerfile"
        include-app-packages: true
        fail-build: true
    - name: anchore inline scan JSON results
      run: for j in `ls ./anchore-reports/*.json`; do echo "---- ${j} ----"; cat ${j}; echo; done
    - name: Docker Login
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Publish Docker Image
      run: docker push setkeh/haproxy-alpine:latest
  build-jdk-8-alpine:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build the Docker image
      run: docker build jdk-8-alpine/ -t setkeh/jdk-8-alpine:latest
    - uses: anchore/scan-action@master
      with:
        image-reference: "setkeh/jdk-8-alpine:latest"
        dockerfile-path: "jdk-8-alpine/Dockerfile"
        include-app-packages: true
        fail-build: true
    - name: anchore inline scan JSON results
      run: for j in `ls ./anchore-reports/*.json`; do echo "---- ${j} ----"; cat ${j}; echo; done
    - name: Docker Login
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Publish Docker Image
      run: docker push setkeh/jdk-8-alpine:latest
  build-jupyter:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build the Docker image
      run: docker build jupyter/ -t setkeh/jupyter:latest
    - uses: anchore/scan-action@master
      with:
        image-reference: "setkeh/jupyter:latest"
        dockerfile-path: "jupyter/Dockerfile"
        include-app-packages: true
        fail-build: true
    - name: anchore inline scan JSON results
      run: for j in `ls ./anchore-reports/*.json`; do echo "---- ${j} ----"; cat ${j}; echo; done
    - name: Docker Login
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Publish Docker Image
      run: docker push setkeh/jupyter:latest
  build-rundeck-alpine:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build the Docker image
      run: docker build rundeck-alpine/ -t setkeh/rundeck-alpine:latest
    - uses: anchore/scan-action@master
      with:
        image-reference: "setkeh/rundeck-alpine:latest"
        dockerfile-path: "rundeck-alpine/Dockerfile"
        include-app-packages: true
        fail-build: true
    - name: anchore inline scan JSON results
      run: for j in `ls ./anchore-reports/*.json`; do echo "---- ${j} ----"; cat ${j}; echo; done
    - name: Docker Login
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Publish Docker Image
      run: docker push setkeh/rundeck-alpine:latest
  build-terraform:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build the Docker image
      run: docker build terraform/ -t setkeh/terraform:latest
    - uses: anchore/scan-action@master
      with:
        image-reference: "setkeh/terraform:latest"
        dockerfile-path: "terraform/Dockerfile"
        include-app-packages: true
        fail-build: true
    - name: anchore inline scan JSON results
      run: for j in `ls ./anchore-reports/*.json`; do echo "---- ${j} ----"; cat ${j}; echo; done
    - name: Docker Login
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Publish Docker Image
      run: docker push setkeh/terraform:latest